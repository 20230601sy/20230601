<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="customAccessDenied" class="com.study.security.CustomAccessDeniedHandler"/>
	<bean id="customLoginSuccess" class="com.study.security.CustomLoginSuccessHandler"/>
	<!-- <bean id="customNoopPasswordEncoder" class="com.study.security.CustomNoopPasswordEncoder"/> -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<bean id="customUserDetailsService" class="com.study.security.CustomUserDetailsService"/>
	
	<security:http>
		<security:intercept-url pattern="/all" access="permitAll"/>
		<security:intercept-url pattern="/member" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
		<security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess"/>
<!-- 		<security:access-denied-handler error-page="/accessError"/> -->
		<security:access-denied-handler ref="customAccessDenied"/>
<!-- 		<security:logout logout-url="/customLogout" invalidate-session="true"/> -->
		<security:logout logout-url="/customLogout" invalidate-session="true" delete-cookies="remember-me, JSESSIONID"/> <!-- delete 쿠키 안해주면 remember-me가 여전히 남아있어서 지워주는 거라는데 이거 없어도 로그아웃하면 지워짐... -->
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800" />
	</security:http>
	<security:authentication-manager>
		<!-- <security:authentication-provider> -->
		<security:authentication-provider user-service-ref="customUserDetailsService">
		<!-- du 연동을 위해 주석 
			<security:user-service>
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
				<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN"/>
			</security:user-service>
			 -->
			<!-- <security:password-encoder ref="customNoopPasswordEncoder"/> -->
			<!-- <security:jdbc-user-service data-source-ref="dataSource"/> --> <!-- dataSource는 hikariCP에서 설정한 거 -->
			<!-- <security:jdbc-user-service data-source-ref="dataSource" users-by-username-query="select userid, userpw, enabled from tbl_member where userid=?" authorities-by-username-query="select userid, auth from tbl_member_auth where userid=?"/> -->
			
			<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
