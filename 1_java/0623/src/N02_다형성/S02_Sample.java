package N02_다형성;

class A{} 			// 할머니
class B extends A{} // 장남
class C extends A{} // 차남
class D extends B{} // 장손
class E extends C{} // 차남 아들

public class S02_Sample {

	public static void main(String[] args) {
		/*
		 * 객체끼리도 형변환이 이루어지는데
		 * 전혀 관련 없는 객체끼리는 안되고
		 * 상속받은 클래스끼리만 가능
		 */
		
		B b = new B();
		C c = new C();
		D d = new D();
		E e = new E();
		
		A ab; // A클래스의 인스턴스 주소값을 가지는 ab라는 참조변수(애초에 값이라는 것을 가지지 못하고 주소값만 가지고 있다는 의미)
		ab = b; // 이건 가능한데, b=ab;가 안 되는구나. 이거 처음 들을 때도 헷갈리더니 ㅡㅡ
		A ae = e; // 손주도 가능! 상속 관계가 연결되어있으면 가능함
		// 이런 걸 다형성이라고 함. B도 담을 수 있고, C도 담을 수 있는... // 포용성(?)
//		b = e; 이건 안 돼! 아무리 할머니가 같다고 해도... 이거 유산이랑 같은 개념이 되는 건가? 점점점점 복잡해질 거니까
		// 247p 교재에서 "자손타입의 참조변수로 조상타입의 인스털스를 참조할 수는 없다"는 반만 맞는 얘기라고 정정.
		b = (B)ab; // (int)처럼 가능하긴 함
		// 작은 쪽으로 가는(다운캐스팅) 조건은 명시하는 것뿐만 아니라, 업캐스팅한 것만 다운캐스팅이 가능함.
		b = (B)ae; // 이건 된다는 거! 그런데 나중에 문제는 생길 거라는 거지... 나중에 단계별로 본다고 하심	
	}
}
